{
    "Dialog Template": {
        "prefix": [ "dna.dialog" ],
        "body": [
            "<div class=\"mat-typography\">",
                "\t<h2 mat-dialog-title>${1:title}</h2>",
                "\t<mat-dialog-content>",
                    "\t\t$0",
                "\t</mat-dialog-content>",
                "\t<mat-dialog-actions>",
                    "\t\t<button mat-stroked-button mat-dialog-close>Cancel</button>",
                "\t</mat-dialog-actions>",
            "</div>"
        ]
    },
    "Card Shell": {
        "prefix": [ "dna.card-shell" ],
        "body": [
            "<section class=\"${1:background card elevated}\" fxLayout=\"${2:layout}\" fxLayoutAlign=\"${3:align}\">",
                "\t$0",
            "</section>"
        ]
    },
    "Flex Container": {
        "prefix": [ "dna.flex-container" ],
        "body": [
            "<section fxLayout=\"${1:layout}\" fxLayoutAlign=\"${2:align}\" class=\"${3:container}\">",
                "\t$0",
            "</section>"
        ]
    },
    "Async Container": {
        "prefix": [ "dna.async-container" ],
        "body": [
            "<ng-container *ngIf=\"${1:stream} | async as ${2:data} else ${3:loading}\">",
                "\t$0",
            "</ng-container>"
        ]
    },
    "Loading Template": {
        "prefix": [ "dna.loading-template" ],
        "body": [
            "<ng-template #${1:loading}>",
                "\t<mat-progress-bar mode=\"${2:indeterminate}\" color=\"${3:accent}\"></mat-progress-bar>",
            "</ng-template>"
        ]
    },
    "Searchbar": {
        "prefix": [ "dna.searchbar" ],
        "body": [
            "<searchbar label=\"${1:Search}\" [minimum]=\"${2:1}\" (search)=\"${3:searchFunction}\" (clear)=\"${4:clearFunction}\"></searchbar>"
        ]
    },
    "Material Select": {
        "prefix": [ "dna.mat-select" ],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<mat-select [(ngModel)]=\"${2:model}\">",
                    "\t\t<mat-option *ngFor=\"let ${3:o} of ${4:data}\" [value]=\"${5:val}\">{{${6:display}}}</mat-option>",
                "\t</mat-select>",
            "</mat-form-field>"
        ]
    },
    "Material Select With Change": {
        "prefix": [ "dna.mat-select-change" ],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<mat-select [(ngModel)]=\"${2:model}\" (selectionChange)=\"${3:changeFunction()}\">",
                    "\t\t<mat-option *ngFor=\"let ${4:o} of ${5:data}\" [value]=\"${6:val}\">{{${7:display}}}</mat-option>",
                "\t</mat-select>",
            "</mat-form-field>"
        ]
    },
    "Material Input": {
        "prefix": [ "dna.mat-input" ],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<input matInput [(ngModel)]=\"${2:model}\" />",
            "</mat-form-field>"
        ]
    },
    "Material Input Template Reference Variable": {
        "prefix": [ "dna.mat-input-trv" ],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<input matInput [(ngModel)]=\"${2:model}\" #${3:varName} />",
            "</mat-form-field>"
        ]
    },
    "Material Textarea": {
        "prefix": [ "dna.mat-textarea" ],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<textarea matInput mat-autosize [(ngModel)]=\"${2:model}\" [matAutosizeMinRows]=\"${3:4}\" [matAutosizeMaxRows]=\"${4:8}\"></textarea>",
            "</mat-form-field>"
        ]
    },
    "Material Datepicker": {
        "prefix": [ "dna.mat-datepicker" ],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<input [(ngModel)]=\"${2:model}\" matInput [matDatepicker]=\"${3:picker}\">",
                "\t<mat-datepicker-toggle matSuffix [for]=\"${3:picker}\"></mat-datepicker-toggle>",
                "\t<mat-datepicker #${3:picker}></mat-datepicker",
            "</mat-form-field>"
        ]
    },
    "Material Slider": {
        "prefix": [ "dna.mat-slider" ],
        "body": [
            "<mat-slider [value]=\"${1:model}\" [min]=\"${2:min}\" [max]=\"${3:max}\" [thumbLabel]=\"${4:true}\" [step]=\"${5:step}\" [tickInterval]=\"${6:interval}\" (input)=\"${7:inputFunction}\"></mat-slider>"
        ]
    },
    "Material Slide Toggle": {
        "prefix": [ "dna.mat-slide-toggle" ],
        "body": [
            "<mat-slide-toggle [(ngModel)]=\"${1:model}\">${2:Label}</mat-slide-toggle>"
        ]
    },
    "Material Menu": {
        "prefix": [ "dna.mat-menu" ],
        "body": [
            "<button mat-icon-button [matMenuTriggerFor]=\"${1:menu}\">",
                "\t<mat-icon>${2:menu_icon}</mat-icon>",
            "</button>",
            "<mat-menu #${1:menu}=\"matMenu\">",
                "\t<button mat-menu-item (click)=\"${3:clickFunction}\">{{${4:label}}}</button>",
                "\t$0",
            "</mat-menu>"
        ]
    },
    "Material Tab Nav": {
        "prefix": [ "dna.mat-tab-nav" ],
        "body": [
            "<nav mat-tab-nav-bar class=\"${1:scrolled}\">",
                "\t<a mat-tab-link routerLink=\"${2:link}\" routerLinkActive=\"${3:active}\">",
                    "\t\t${4:Label}",
                "\t</a>",
                "\t$0",
            "</nav>",
            "<router-outlet></router-outlet>"
        ]
    },
    "Material Route Tab": {
        "prefix": [ "dna.mat-route-tab" ],
        "body": [
            "<a mat-tab-link routerLink=\"${1:link}\" routerLinkActive=\"${2:active}\">",
                "\t${3:Label}",
            "</a>",
            "$0"
        ]
    },
    "Drag and Drop Selector": {
        "prefix": [ "dna.dnd-selector" ],
        "body": [
            "<button mat-stroked-button [disabled]=\"pending\" [style.margin.px]=\"8\" (click)=\"save.emit(${6:assigned})\">",
                "\tSave",
            "</button>",
            "<section fxLayout=\"row | wrap\" fxLayoutAlign=\"start start\">",
                "\t<section fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex [style.margin-right.px]=\"4\">",
                    "\t\t<p class=\"mat-title\">${1:Available}</p>",
                    "\t\t<section cdkDropList #list=\"cdkDropList\" [cdkDropListData]=\"${2:available}\" [cdkDropListConnectedTo]=\"[selected]\" class=\"container drop-container\" (cdkDropListDropped)=\"drop(\\$event)\">",
                        "\t\t\t<section *ngFor=\"let ${3:x} of ${2:available}\" class=\"background card container elevated clickable\" cdkDrag>",
                            "\t\t\t\t<div class=\"drag-placeholder\" *cdkDragPlaceholder></div>",
                            "\t\t\t\t<p>{{${4:x.display}}}</p>",
                        "\t\t\t</section>",
                    "\t\t</section>",
                "\t</section>",
                "\t<section fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxFlex [style.margin-left.px]=\"4\">",
                    "\t\t<p class=\"mat-title\">${5:Assigned}</p>",
                    "\t\t<section cdkDropList #selected=\"cdkDropList\" [cdkDropListData]=\"${6:assigned}\" [cdkDropListConnectedTo]=\"[list]\" class=\"container drop-container\" (cdkDropListDropped)=\"drop(\\$event)\">",
                        "\t\t\t<section *ngFor=\"let ${7:y} of ${6:assigned}\" class=\"background card container elevated clickable\" cdkDrag>",
                            "\t\t\t\t<div class=\"drag-placeholder\" *cdkDragPlaceholder></div>",
                            "\t\t\t\t<p>{{${8:y.display}}}</p>",
                        "\t\t\t</section>",
                    "\t\t</section>",
                "\t</section>",
            "</section>"
        ]
    },
    "Reactive Checkbox": {
        "prefix": ["dna.rx-checkbox"],
        "body": [
            "<mat-checkbox formControlName=\"${1:control}\" [indeterminate]=\"${2:true}\">${3:Label}</mat-checkbox>"
        ]
    },
    "Reactive Datepicker": {
        "prefix": ["dna.rx-datepicker"],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<input formControlName=\"${2:control}\" matInput [matDatepicker]=\"${3:picker}\">",
                "\t<mat-datepicker-toggle matSuffix [for]=\"${3:picker}\"></mat-datepicker-toggle>",
                "\t<mat-datepicker #${3:picker}></mat-datepicker>",
            "</mat-form-field>"
        ]
    },
    "Reactive Input": {
        "prefix": ["dna.rx-input"],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<input formControlName=\"${2:control}\" matInput>",
            "</mat-form-field>"
        ]
    },
    "Reactive Radio": {
        "prefix": ["dna.rx-radio"],
        "body": [
            "<label>${1:Label}</label>",
            "<mat-radio-group formControlName=\"${2:control}\" fxLayout=\"${3:column}\" fxLayoutGap=\"${4:8px}\">",
                "\t<mat-radio-button *ngFor=\"let ${5:opt} of ${6:data}\" [value]=\"${7:value}\">{{${8:display}}}</mat-radio-button>",
            "</mat-radio-group>"
        ]
    },
    "Reactive Select": {
        "prefix": ["dna.rx-select"],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<mat-select formControlName=\"${2:control}\">",
                    "\t\t<mat-option *ngFor=\"let ${3:opt} of ${4:data}\" [value]=\"${5:value}\">{{${6:display}}}</mat-option>",
                "\t</mat-select>",
            "</mat-form-field>"
        ]
    },
    "Reactive Select Change": {
        "prefix": ["dna.rx-select-change"],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<mat-select formControlName=\"${2:control}\" (selectionChange)=\"${3:changeFunction()}\">",
                    "\t\t<mat-option *ngFor=\"let ${4:opt} of ${5:data}\" [value]=\"${6:value}\">{{${7:display}}}</mat-option>",
                "\t</mat-select>",
            "</mat-form-field>"
        ]
    },
    "Reactive Slide Toggle": {
        "prefix": ["dna.rx-slide-toggle"],
        "body": [
            "<mat-slide-toggle formControlName=\"${1:control}\">${2:Label}</mat-slide-toggle>"
        ]
    },
    "Reactive Slider": {
        "prefix": ["dna.rx-slider"],
        "body": [
            "<section fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"${1:8px}\">",
                "\t<span>${2:Label}</span>",
                "\t<mat-slider formControlName=\"${3:control}\" [min]=\"${4:min}\" [max]=\"${5:max}\" [step]=\"${6:step}\" [thumbLabel]=\"${7:true}\"></mat-slider>",
                "\t<span>{{${8:value}}}</span>",
            "</section>"
        ]
    },
    "Reactive Textarea": {
        "prefix": ["dna.rx-textarea"],
        "body": [
            "<mat-form-field>",
                "\t<mat-label>${1:Label}</mat-label>",
                "\t<textarea formControlName=\"${2:control}\" matInput mat-autosize [matAutosizeMinRows=\"${3:min}\" [matAutosizeMaxRows=\"${4:max}\"></textarea>",
            "</mat-form-field>"
        ]
    }
}
